# Generated by Django 5.0.7 on 2024-08-31 15:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField(null=True)),
                ('endDate', models.DateField(null=True)),
                ('electionStatus', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventName', models.CharField(max_length=32, null=True)),
                ('eventDate', models.DateField(null=True)),
                ('venue', models.CharField(max_length=64, null=True)),
                ('address', models.CharField(max_length=128, null=True)),
                ('eventDescription', models.TextField(max_length=256, null=True)),
                ('eventStatus', models.BooleanField(default=True)),
                ('pubmat', models.ImageField(null=True, upload_to='')),
                ('startTime', models.TimeField(null=True)),
                ('endTime', models.TimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobileNum', models.CharField(max_length=16)),
                ('region', models.CharField(max_length=32)),
                ('address', models.CharField(max_length=32)),
                ('occupation', models.CharField(max_length=16)),
                ('age', models.IntegerField(null=True)),
                ('memType', models.CharField(max_length=32)),
                ('birthdate', models.DateField(null=True)),
                ('verification_code', models.IntegerField(blank=True, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('profilePic', models.ImageField(null=True, upload_to='papsas_app/profilePic')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Candidacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidacyStatus', models.BooleanField(null=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate', to=settings.AUTH_USER_MODEL)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elections', to='papsas_app.election')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membershipType', models.CharField(max_length=32)),
                ('membershipDate', models.DateField()),
                ('membershipExpireDate', models.DateField()),
                ('membershipStatus', models.CharField(max_length=32)),
                ('membershipPrice', models.DecimalField(decimal_places=2, max_digits=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(choices=[('President', 'President'), ('Secretary', 'Secretary'), ('Regular', 'Regular')], max_length=32, null=True)),
                ('termStart', models.DateField(null=True)),
                ('termEnd', models.DateField(null=True)),
                ('candidateID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='officers', to='papsas_app.candidacy')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voteDate', models.DateField()),
                ('candidateID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='papsas_app.candidacy')),
                ('voterID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voter', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
